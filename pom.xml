<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.hxl</groupId>
    <artifactId>sky_take_out</artifactId>
    <version>1.0-SNAPSHOT</version>

    <packaging>pom</packaging>
    <modules>
        <module>sky_server</module>
        <module>sky_common</module>
        <module>sky_pojo</module>
    </modules>

    <!-- 导入SpringBoot的父工程 -->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.7.3</version>
    </parent>

    <properties>
        <!-- 环境变量控制 -->
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>

        <spring.mybatis.version>2.2.0</spring.mybatis.version>
        <lombok.version>1.18.20</lombok.version>
        <fastjson.version>1.2.76</fastjson.version>
        <commons.long.version>2.6</commons.long.version>
        <druid.version>1.2.20</druid.version>
        <pagehelper.version>1.3.0</pagehelper.version>
        <aliyun.oss.version>3.10.2</aliyun.oss.version>
        <knife4j.version>3.0.2</knife4j.version>
        <aspectj.version>1.9.4</aspectj.version>
        <jjwt.version>0.9.1</jjwt.version>
        <jaxb.api.version>2.3.1</jaxb.api.version>
        <apache.poi.version>3.16</apache.poi.version>
        <guava.version>30.1-jre</guava.version>
    </properties>

    <!-- 依赖管理部分，定义依赖的版本和配置，但不实际引入依赖 -->
    <!-- 子模块可以直接引用这里定义的依赖，而无需重复指定版本 -->
    <dependencyManagement>
        <dependencies>
            <!-- 添加Guava的BloomFilter依赖 -->
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>


            <!-- MyBatis Spring Boot 整合依赖，用于在 Spring Boot 中集成 MyBatis ORM 框架 -->
            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${spring.mybatis.version}</version>
            </dependency>

            <!-- Lombok 依赖，提供 @Data、@Autowired 等注解简化代码编写 -->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>

            <!-- FastJSON 依赖，用于 Java 对象与 JSON 格式的相互转换 -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>

            <!-- Apache Commons Lang 依赖，提供常用的 Java 工具方法 -->
            <dependency>
                <groupId>commons-lang</groupId>
                <artifactId>commons-lang</artifactId>
                <version>${commons.long.version}</version>
            </dependency>

            <!-- Druid 数据库连接池依赖，提供高效的数据库连接管理 -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>${druid.version}</version>
            </dependency>

            <!-- PageHelper 分页插件依赖，简化 MyBatis 分页查询操作 -->
            <dependency>
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper-spring-boot-starter</artifactId>
                <version>${pagehelper.version}</version>
            </dependency>

            <!-- Knife4j 依赖，基于 Spring Boot 的 API 文档生成工具，支持 Swagger 规范 -->
            <dependency>
                <groupId>com.github.xiaoymin</groupId>
                <artifactId>knife4j-spring-boot-starter</artifactId>
                <version>${knife4j.version}</version>
            </dependency>

            <!-- AspectJ 运行时依赖，用于实现面向切面编程 -->
            <dependency>
                <groupId>org.aspectj</groupId>
                <artifactId>aspectjrt</artifactId>
                <version>${aspectj.version}</version>
            </dependency>

            <!-- AspectJ 编织器依赖，用于编译时织入切面 -->
            <dependency>
                <groupId>org.aspectj</groupId>
                <artifactId>aspectjweaver</artifactId>
                <version>${aspectj.version}</version>
            </dependency>

            <!-- JJWT 依赖，用于生成和验证 JSON Web Token (JWT) 令牌 -->
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt</artifactId>
                <version>${jjwt.version}</version>
            </dependency>

            <!-- 阿里云 OSS 存储 SDK 依赖，用于操作阿里云对象存储服务 -->
            <dependency>
                <groupId>com.aliyun.oss</groupId>
                <artifactId>aliyun-sdk-oss</artifactId>
                <version>${aliyun.oss.version}</version>
            </dependency>

            <!-- JAXB API 依赖，用于 Java 对象与 XML 之间的绑定转换 -->
            <dependency>
                <groupId>javax.xml.bind</groupId>
                <artifactId>jaxb-api</artifactId>
                <version>${jaxb.api.version}</version>
            </dependency>

            <!-- Apache POI 依赖，用于操作 Office 文档 (Word, Excel, PowerPoint) -->
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi</artifactId>
                <version>${apache.poi.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi-ooxml</artifactId>
                <version>${apache.poi.version}</version>
            </dependency>

            <!-- 微信支付依赖，基于 Apache HttpClient 的微信支付 V3 接口客户端 -->
            <dependency>
                <groupId>com.github.wechatpay-apiv3</groupId>
                <artifactId>wechatpay-apache-httpclient</artifactId>
                <version>0.4.8</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.10.1</version>
                <configuration>
                    <!-- 移除冗余的source/target配置 -->
                    <verbose>true</verbose>
                    <!-- 显式指定编译器版本 -->
                    <release>17</release>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>